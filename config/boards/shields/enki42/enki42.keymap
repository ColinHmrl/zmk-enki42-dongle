/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

#include "keymap_french.h"


&lt { quick_tap_ms = <220>; };

&mt { quick_tap_ms = <220>; };

/ {
    macros {
        numdot: numdot {
            label = "ZM_numdot";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N4 &kp KP_N6>,
                <&macro_release>,
                <&kp LALT>;
        };

        grtsgn: grtsgn {
            label = "ZM_grtsgn";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N6 &kp KP_N2>,
                <&macro_release>,
                <&kp LALT>;
        };
    };
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------
            //| ESCAPE  |  A  |  W  |  E  |  R  |  T  |              |  Y  |  U   |  I  |  O  |  P  | &trans | 
            //| TAB     |  A  |  S  |  D  |  F  |  G  |              |  H  |  J   |  K  |  L  |  M  | &trans |
            //| <>      |  Z  |  X  |  C  |  V  |  B  |              |  N  |  ,   |  ;  |  :  |  !  | &trans |
            //                             | ENTER | 1 | SPACE |   | BACKSPACE | 2 | DEL |

            bindings = <
&kp ESCAPE      &kp FR_A  &kp FR_Z  &kp FR_E         &kp FR_R  &kp FR_T      &kp FR_Y         &kp FR_U      &kp FR_I          &kp FR_O      &kp FR_P            &kp ENTER
&kp TAB         &hm LWIN FR_Q  &hm LALT FR_S  &hm LCTRL FR_D   &hm LSHIFT FR_F  &kp FR_G      &kp FR_H         &hm RSHIFT FR_J      &hm RCTRL FR_K          &hm RALT L      &hm RWIN FR_M  &kp ENTER
&kp FR_LABK     &kp FR_W  &kp FR_X  &kp FR_C         &kp FR_V  &kp FR_B      &kp FR_N         &kp FR_COMM  &kp FR_SCLN  &kp FR_COLN  &kp FR_EXLM   &kp ENTER
                              &kp ENTER  &mo 1  &kp SPACE  &kp BACKSPACE  &mo 2      &kp DEL
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            //|  ²      |  &        |  é        |  "     |  '       |  (        | -         |  è  |  _  |  ç  |  à  |  )  | = |
            //|  ___    |  FR_1     |  FR_2     |  FR_3  |  FR_4    |  FR_5     |  FR_6     |  FR_7  |  FR_8  |  FR_9  |  FR_0  |  )  | CTRL/F2 |
            //|  ___    |  >        |  1        |  4     |  3       |  .        |           |  ls |  F4 |  F5 |  F6 |  F7 | RALT/F3 |
            //                      | ADJ | ___ | ___ |    | ___ | ___ | ADJ |

            bindings = <
&kp FR_SUP2 &kp FR_AMPR  &kp FR_EACU  &kp FR_DQUO       &kp FR_QUOT  &kp FR_LPRN   &kp FR_MINS       &kp FR_EGRV    &kp FR_UNDS     &kp FR_CCED  &kp FR_AGRV  &kp FR_RPRN
&mt TAB     &kp KP_SLASH     &kp N4  &kp N5       &kp N6  &kp MINUS  &kp CARET      &kp AMPS  &kp STAR     &kp LPAR  &kp RPAR   &mt RALT F2
&mt LALT EQUAL   &kp N0           &kp N1  &kp N2       &kp N3  &numdot    &kp LG(SPACE)  &kp F4    &kp F5       &kp F6    &kp F7     &mt RALT F3
                                          &trans  &trans  &trans     &trans         &mo 2    &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            //| LGUI |  VOLU  |  PGUP  | PLAY | HOME | ___  |            | ___  | HOME | PLAY| PGUP | VOLU | RGUI |
            //| CTRL |  VOLD  |  LEFT  |  UP  | DOWN | RGHT |            | RGHT | DOWN | UP  | LEFT | VOLD | CTRL | 
            //| LALT |  MUTE  |  PGDN  |  ___ | END  | ___  |            | ___  | END  | ___ | PGDN | MUTE | RALT |
            //                          | ___ | ___  | ADJ  |            | ADJ  | ___  | ___ |

            bindings = <
&kp LWIN   &kp C_VOL_UP  &kp PG_UP  &kp C_PP       &kp HOME  &kp C_PAUSE  &kp N0       &kp HOME  &kp C_PP  &kp PG_UP  &kp C_VOL_UP  &kp RWIN
&kp LCTRL  &kp C_VOL_DN  &kp LEFT   &kp UP         &kp DOWN  &kp RIGHT    &kp LEFT     &kp DOWN  &kp UP    &kp RIGHT  &kp C_VOL_DN  &kp RALT
&kp LALT   &kp C_MUTE    &kp PG_DN  &kp LG(LS(S))  &kp END   &kp C_PLAY   &kp N0       &kp END   &grtsgn   &kp PG_DN  &kp C_MUTE    &kp RALT
                                    &trans         &mo 1    &trans  &trans  &trans    &trans
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            //| BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR |
            //| BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
            //|pwrOFF|NUMLK|     |     |     |     |   |     |     |     |     |     |      |
            //                   |     |     |     |   |     |     |     |

            bindings = <
&bootloader        &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &bootloader
&bt BT_CLR         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&ext_power EP_OFF  &kp KP_NUM    &none         &none         &none         &none         &none         &none         &none         &none         &none         &ext_power EP_OFF
                                               &trans        &none         &trans        &trans        &none         &trans
            >;
        };
    };

    // conditional_layers {
    //     compatible = "zmk,conditional-layers";

    //     both {
    //         if-layers = <1 2>;
    //         then-layer = <3>;
    //     };
    // };
};
